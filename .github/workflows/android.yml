name: Android APK with HERE Maps (Simplifié - Sans Icônes)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build-debug:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Java 17
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.27.4'
        channel: 'stable'
        cache: true

    - name: Download and extract HERE SDK Reference App
      run: |
        echo "📦 Téléchargement du repository HERE SDK Reference App..."

        # Télécharger le ZIP du tag 1.14.0
        curl -L -o here_sdk_ref_app.zip           "https://github.com/heremaps/here-sdk-ref-app-flutter/archive/refs/tags/1.14.0.zip"

        # Extraire l'archive
        echo "📂 Extraction de l'archive..."
        unzip -q here_sdk_ref_app.zip

        # Trouver le dossier extrait
        EXTRACTED_FOLDER=$(find . -name "here-sdk-ref-app-flutter-*" -type d | head -n 1)

        if [ -z "$EXTRACTED_FOLDER" ]; then
          echo "❌ Erreur: Dossier extrait non trouvé"
          exit 1
        fi

        echo "✅ Code source extrait: $EXTRACTED_FOLDER"

        # Analyser le contenu pour debug
        echo "📋 Contenu principal du dossier:"
        ls -la "$EXTRACTED_FOLDER/"

        # Vérifier ce qui est dans plugins
        if [ -d "$EXTRACTED_FOLDER/plugins" ]; then
          echo "📁 Contenu du dossier plugins:"
          ls -la "$EXTRACTED_FOLDER/plugins/"

          # Vérifier si here_sdk existe déjà
          if [ -d "$EXTRACTED_FOLDER/plugins/here_sdk" ]; then
            echo "🎉 Plugin HERE SDK trouvé dans le code source!"
            ls -la "$EXTRACTED_FOLDER/plugins/here_sdk/"
          else
            echo "⚠️ Plugin HERE SDK non trouvé dans plugins/"
          fi
        else
          echo "❌ Dossier plugins non trouvé"
        fi

    - name: Create HERE SDK plugin structure
      run: |
        echo "🔧 Configuration du plugin HERE SDK..."

        EXTRACTED_FOLDER=$(find . -name "here-sdk-ref-app-flutter-*" -type d | head -n 1)

        # Créer le dossier plugins s'il n'existe pas
        mkdir -p plugins

        # Vérifier si le plugin existe dans les sources téléchargées
        if [ -d "$EXTRACTED_FOLDER/plugins/here_sdk" ]; then
          echo "✅ Copie du plugin HERE SDK depuis les sources..."
          cp -r "$EXTRACTED_FOLDER/plugins/here_sdk" plugins/
        else
          echo "🔧 Création d'un plugin HERE SDK placeholder..."

          # Créer la structure du plugin placeholder
          mkdir -p plugins/here_sdk/lib/src
          mkdir -p plugins/here_sdk/android/src/main/kotlin/com/here/sdk
          mkdir -p plugins/here_sdk/ios/Classes

          # Créer pubspec.yaml
          cat > plugins/here_sdk/pubspec.yaml << 'EOF'
        name: here_sdk
        description: HERE SDK for Flutter (Placeholder)
        version: 4.22.0

        environment:
          sdk: '>=2.17.0 <4.0.0'
          flutter: '>=3.0.0'

        flutter:
          plugin:
            platforms:
              android:
                package: com.here.sdk
                pluginClass: HereSdkPlugin
              ios:
                pluginClass: HereSdkPlugin

        dependencies:
          flutter:
            sdk: flutter
        EOF

          # Créer les fichiers Dart de base
          cat > plugins/here_sdk/lib/here_sdk.dart << 'EOF'
        library here_sdk;

        export 'src/sdk_context.dart';
        export 'src/mapview.dart';
        export 'src/core.dart';

        class HereSDK {
          static const String version = '4.22.0-placeholder';

          static Future<void> initializeSDK() async {
            print('HERE SDK Placeholder initialisé');
          }
        }
        EOF

          cat > plugins/here_sdk/lib/src/sdk_context.dart << 'EOF'
        enum IsolateOrigin { main }

        class SdkContext {
          static void init(IsolateOrigin origin) {
            print('SdkContext.init placeholder');
          }
        }
        EOF

          cat > plugins/here_sdk/lib/src/core.dart << 'EOF'
        class GeoCoordinates {
          final double latitude;
          final double longitude;
          const GeoCoordinates(this.latitude, this.longitude);
        }

        abstract class InstantiationException implements Exception {
          static void checkPluginInstallation() {
            print('HERE SDK placeholder actif');
          }
        }
        EOF

          cat > plugins/here_sdk/lib/src/mapview.dart << 'EOF'
        import 'package:flutter/widgets.dart';
        import 'package:flutter/material.dart';

        class HereMap extends StatefulWidget {
          final Function(HereMapController)? onMapCreated;
          const HereMap({Key? key, this.onMapCreated}) : super(key: key);

          @override
          State<HereMap> createState() => _HereMapState();
        }

        class _HereMapState extends State<HereMap> {
          @override
          void initState() {
            super.initState();
            WidgetsBinding.instance.addPostFrameCallback((_) {
              widget.onMapCreated?.call(HereMapController());
            });
          }

          @override
          Widget build(BuildContext context) {
            return Container(
              decoration: BoxDecoration(
                gradient: LinearGradient(
                  colors: [Colors.blue[100]!, Colors.blue[300]!],
                ),
              ),
              child: Center(
                child: Column(
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: [
                    Icon(Icons.map, size: 64),
                    Text('HERE Map Placeholder'),
                    Text('Plugin placeholder actif'),
                  ],
                ),
              ),
            );
          }
        }

        class HereMapController {
          void addMapObject(dynamic obj) => print('addMapObject placeholder');
          void removeMapObject(dynamic obj) => print('removeMapObject placeholder');
        }
        EOF
        fi

        echo "✅ Plugin HERE SDK configuré"

    - name: Copy assets from reference app
      run: |
        echo "📁 Copie des assets depuis l'app de référence..."

        EXTRACTED_FOLDER=$(find . -name "here-sdk-ref-app-flutter-*" -type d | head -n 1)

        # Créer le dossier assets s'il n'existe pas
        mkdir -p assets

        # Copier les assets de base (hors icônes HERE)
        if [ -d "$EXTRACTED_FOLDER/assets" ]; then
          # Copier les fichiers assets de base, en excluant here-icons
          find "$EXTRACTED_FOLDER/assets" -type f \
            ! -path "*/here-icons/*" \
            -exec cp {} assets/ \; 2>/dev/null || true

          echo "✅ Assets de base copiés (hors icônes HERE)"
        fi

    - name: Configure HERE credentials
      run: |
        mkdir -p lib/config
        cat > lib/config/here_config.dart << 'EOF'
        class HereConfig {
          static const String accessKeyId = 'YOUR_ACCESS_KEY_ID';
          static const String accessKeySecret = 'YOUR_ACCESS_KEY_SECRET';

          static const double radarAlertDistance = 1000.0;
          static const double speedTolerance = 5.0;
          static const bool offlineMapsEnabled = true;
          static const String voiceLanguage = 'fr-FR';

          static Future<void> initializeHereSDK() async {
            print('HERE Config initialisé - mode placeholder');
          }
        }
        EOF

    - name: Get Flutter dependencies
      run: |
        echo "📦 Installation des dépendances Flutter..."
        flutter pub get --verbose

    - name: Analyze Flutter code
      run: |
        echo "🔍 Analyse du code..."
        flutter analyze --no-fatal-infos || echo "⚠️ Warnings détectés"

    - name: Build debug APK
      run: |
        echo "🔨 Build de l'APK..."
        flutter build apk --debug --verbose

    - name: Success message
      run: |
        echo "🎉 BUILD RÉUSSI!"
        echo "================================"
        echo "✅ APK généré avec succès"
        echo "✅ Plugin HERE SDK configuré (placeholder)"
        echo ""
        echo "📋 POUR UTILISER LE VRAI HERE SDK:"
        echo "1. Téléchargez le depuis developer.here.com"
        echo "2. Remplacez plugins/here_sdk/ par le vrai plugin"
        echo "3. Configurez vos credentials"
        echo "4. Relancez le build"

    - name: Upload debug APK
      uses: actions/upload-artifact@v4
      with:
        name: alpr-here-sdk-debug
        path: build/app/outputs/flutter-apk/app-debug.apk
