name: Android APK with HERE Maps (SDK Real Download)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build-debug:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Java 17
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.27.4'  # Compatible avec HERE SDK 4.22.0
        channel: 'stable'
        cache: true

    - name: Download and extract HERE SDK Reference App
      run: |
        echo "üì¶ T√©l√©chargement du repository HERE SDK Reference App..."

        # T√©l√©charger le ZIP du tag 1.14.0
        curl -L -o here_sdk_ref_app.zip           "https://github.com/heremaps/here-sdk-ref-app-flutter/archive/refs/tags/1.14.0.zip"

        # Extraire l'archive
        unzip -q here_sdk_ref_app.zip

        # Trouver le dossier extrait
        EXTRACTED_FOLDER=$(find . -name "here-sdk-ref-app-flutter-*" -type d | head -n 1)

        if [ -z "$EXTRACTED_FOLDER" ]; then
          echo "‚ùå Erreur: Dossier extrait non trouv√©"
          exit 1
        fi

        echo "‚úÖ Code source extrait: $EXTRACTED_FOLDER"

        # Lister le contenu pour debug
        echo "üìã Contenu du dossier extrait:"
        ls -la "$EXTRACTED_FOLDER/"

        # V√©rifier si le dossier plugins existe
        if [ -d "$EXTRACTED_FOLDER/plugins" ]; then
          echo "üìÅ Dossier plugins trouv√©:"
          ls -la "$EXTRACTED_FOLDER/plugins/"
        else
          echo "‚ö†Ô∏è Dossier plugins non trouv√©"
        fi

    - name: Setup submodules (HERE Icons)
      run: |
        echo "üîß Configuration des submodules HERE Icons..."

        EXTRACTED_FOLDER=$(find . -name "here-sdk-ref-app-flutter-*" -type d | head -n 1)

        # Copier le script de mise √† jour des submodules
        if [ -f "$EXTRACTED_FOLDER/update_submodules.sh" ]; then
          cp "$EXTRACTED_FOLDER/update_submodules.sh" ./
          chmod +x update_submodules.sh
        fi

        # Copier le fichier .gitmodules
        if [ -f "$EXTRACTED_FOLDER/.gitmodules" ]; then
          cp "$EXTRACTED_FOLDER/.gitmodules" ./
        fi

        # Initialiser le submodule HERE Icons manuellement
        mkdir -p assets/here-icons

        echo "üì¶ T√©l√©chargement des ic√¥nes HERE..."
        # T√©l√©charger les ic√¥nes HERE depuis leur repository
        curl -L -o here-icons.zip           "https://github.com/heremaps/here-icons/archive/refs/heads/main.zip"

        unzip -q here-icons.zip

        # Copier les ic√¥nes
        ICONS_FOLDER=$(find . -name "here-icons-*" -type d | head -n 1)
        if [ -n "$ICONS_FOLDER" ]; then
          cp -r "$ICONS_FOLDER"/* assets/here-icons/
          echo "‚úÖ Ic√¥nes HERE copi√©es"
        fi

    - name: Create placeholder HERE SDK plugin  
      run: |
        echo "üîß Cr√©ation du plugin HERE SDK placeholder..."

        # Le repository de r√©f√©rence ne contient PAS le plugin HERE SDK compil√©
        # Il faut le t√©l√©charger depuis developer.here.com
        # En attendant, cr√©ons un plugin fonctionnel minimal

        mkdir -p plugins/here_sdk/lib
        mkdir -p plugins/here_sdk/android/src/main/kotlin/com/here/sdk
        mkdir -p plugins/here_sdk/ios/Classes

        # Cr√©er pubspec.yaml pour le plugin
        cat > plugins/here_sdk/pubspec.yaml << 'EOF'
        name: here_sdk
        description: HERE SDK for Flutter (Placeholder - Real SDK needed from developer.here.com)
        version: 4.22.0

        environment:
          sdk: '>=2.17.0 <4.0.0'
          flutter: '>=3.0.0'

        flutter:
          plugin:
            platforms:
              android:
                package: com.here.sdk
                pluginClass: HereSdkPlugin
              ios:
                pluginClass: HereSdkPlugin

        dependencies:
          flutter:
            sdk: flutter
        EOF

        # Cr√©er le fichier Dart principal avec les classes n√©cessaires
        cat > plugins/here_sdk/lib/here_sdk.dart << 'EOF'
        // HERE SDK Flutter Plugin (Placeholder)
        // Le vrai plugin doit √™tre t√©l√©charg√© depuis developer.here.com

        library here_sdk;

        export 'src/sdk_context.dart';
        export 'src/mapview.dart';
        export 'src/core.dart';

        class HereSDK {
          static const String version = '4.22.0-placeholder';

          static Future<void> initializeSDK() async {
            print('HERE SDK Placeholder - Version: $version');
            print('‚ùó ATTENTION: Ceci est un placeholder!');
            print('üì• T√©l√©chargez le vrai HERE SDK depuis developer.here.com');
          }
        }
        EOF

        # Cr√©er les fichiers sources n√©cessaires
        mkdir -p plugins/here_sdk/lib/src

        # SDK Context
        cat > plugins/here_sdk/lib/src/sdk_context.dart << 'EOF'
        enum IsolateOrigin { main }

        class SdkContext {
          static void init(IsolateOrigin origin) {
            print('SdkContext.init placeholder called');
          }
        }
        EOF

        # Core classes
        cat > plugins/here_sdk/lib/src/core.dart << 'EOF'
        class GeoCoordinates {
          final double latitude;
          final double longitude;

          const GeoCoordinates(this.latitude, this.longitude);
        }

        abstract class InstantiationException implements Exception {
          static void checkPluginInstallation() {
            print('‚ö†Ô∏è Plugin HERE SDK placeholder - t√©l√©chargez le vrai depuis developer.here.com');
          }
        }
        EOF

        # MapView
        cat > plugins/here_sdk/lib/src/mapview.dart << 'EOF'
        import 'package:flutter/widgets.dart';
        import 'package:flutter/material.dart';

        class HereMap extends StatefulWidget {
          final Function(HereMapController)? onMapCreated;

          const HereMap({Key? key, this.onMapCreated}) : super(key: key);

          @override
          State<HereMap> createState() => _HereMapState();
        }

        class _HereMapState extends State<HereMap> {
          @override
          void initState() {
            super.initState();
            // Simuler la cr√©ation du contr√¥leur
            WidgetsBinding.instance.addPostFrameCallback((_) {
              if (widget.onMapCreated != null) {
                widget.onMapCreated!(HereMapController());
              }
            });
          }

          @override
          Widget build(BuildContext context) {
            return Container(
              decoration: BoxDecoration(
                gradient: LinearGradient(
                  colors: [Colors.blue[100]!, Colors.blue[300]!],
                  begin: Alignment.topLeft,
                  end: Alignment.bottomRight,
                ),
              ),
              child: Center(
                child: Column(
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: [
                    Icon(Icons.map, size: 64, color: Colors.blue[800]),
                    SizedBox(height: 16),
                    Text(
                      'HERE Map Placeholder',
                      style: TextStyle(
                        fontSize: 24,
                        fontWeight: FontWeight.bold,
                        color: Colors.blue[800],
                      ),
                    ),
                    SizedBox(height: 8),
                    Text(
                      'T√©l√©chargez le vrai plugin\ndepuis developer.here.com',
                      textAlign: TextAlign.center,
                      style: TextStyle(
                        fontSize: 16,
                        color: Colors.blue[600],
                      ),
                    ),
                  ],
                ),
              ),
            );
          }
        }

        class HereMapController {
          void camera = null;

          // M√©thodes placeholder
          void addMapObject(dynamic mapObject) {
            print('HereMapController.addMapObject placeholder');
          }

          void removeMapObject(dynamic mapObject) {
            print('HereMapController.removeMapObject placeholder');
          }
        }
        EOF

        echo "‚úÖ Plugin HERE SDK placeholder cr√©√© avec succ√®s"

    - name: Copy reference app structure and assets
      run: |
        echo "üìã Copie de la structure de l'application de r√©f√©rence..."

        EXTRACTED_FOLDER=$(find . -name "here-sdk-ref-app-flutter-*" -type d | head -n 1)

        # Copier les assets n√©cessaires (sauf les ic√¥nes already done)
        if [ -d "$EXTRACTED_FOLDER/assets" ]; then
          cp -r "$EXTRACTED_FOLDER/assets"/* assets/ 2>/dev/null || true
        fi

        # Copier les configurations Android si n√©cessaire
        if [ -d "$EXTRACTED_FOLDER/android" ]; then
          echo "üì± Copie des configurations Android..."
          # Ne pas √©craser compl√®tement, juste prendre des √©l√©ments
          cp -r "$EXTRACTED_FOLDER/android/app/src/main/res"/* android/app/src/main/res/ 2>/dev/null || true
        fi

    - name: Configure HERE API credentials
      run: |
        mkdir -p lib/config
        cat > lib/config/here_config.dart << 'EOF'
        class HereConfig {
          // Credentials placeholder - remplacez par vos vraies credentials HERE Platform
          static const String accessKeyId = 'YOUR_ACCESS_KEY_ID_HERE';
          static const String accessKeySecret = 'YOUR_ACCESS_KEY_SECRET_HERE';

          // Configuration de l'application
          static const double radarAlertDistance = 1000.0;
          static const double speedTolerance = 5.0;
          static const bool offlineMapsEnabled = true;
          static const String voiceLanguage = 'fr-FR';

          static Future<void> initializeHereSDK() async {
            print('HERE Config initialized - Placeholder mode');
            print('‚ùó Configurez vos vraies credentials HERE Platform');
            print('üìã Ajoutez HERE_API_KEY et HERE_APP_ID aux GitHub Secrets');
          }
        }
        EOF

    - name: Update pubspec.yaml to match reference app
      run: |
        echo "üìù Mise √† jour du pubspec.yaml..."

        # Sauvegarder l'ancien pubspec
        cp pubspec.yaml pubspec.yaml.backup

        # Cr√©er un nouveau pubspec bas√© sur l'app de r√©f√©rence mais adapt√©
        cat > pubspec.yaml << 'EOF'
        name: alpr_watchlist
        description: Scan plaques d'immatriculation (OCR) + navigation HERE Maps
        publish_to: 'none'
        version: 1.0.0+1

        environment:
          sdk: '>=3.5.0 <4.0.0'
          flutter: '>=3.27.4'

        dependencies:
          flutter:
            sdk: flutter
          flutter_localizations:
            sdk: flutter

          # HERE SDK depuis plugins local (placeholder pour l'instant)
          here_sdk:
            path: plugins/here_sdk

          # ALPR existant
          camera: ^0.11.0
          google_mlkit_text_recognition: ^0.15.0
          shared_preferences: ^2.3.4

          # Navigation et localisation
          geolocator: ^10.1.0
          permission_handler: ^11.0.0
          awesome_notifications: ^0.8.2
          http: ^1.1.0

          # UI/UX
          flutter_map: ^6.1.0  # Backup si HERE pose probl√®me
          latlong2: ^0.8.1
          cupertino_icons: ^1.0.5

          # D√©pendances de la ref app HERE (si n√©cessaires)
          battery_plus: ^6.0.0
          connectivity_plus: ^6.0.0
          device_info_plus: ^11.0.0
          path_provider: ^2.0.0
          intl: ^0.19.0

        dev_dependencies:
          flutter_test:
            sdk: flutter
          flutter_lints: ^4.0.0

        flutter:
          uses-material-design: true
          generate: true

          assets:
            - assets/
            - assets/sounds/
            - assets/here-icons/icons/guidance-icons/manoeuvers-sdk/
            - assets/here-icons/icons/core-ui/SVG/menu_solid_24px.svg
            - assets/here-icons/icons/core-ui/SVG/chevron-right_solid_24px.svg
            - assets/here-icons/icons/core-ui/SVG/inbox-attention_solid_24px.svg
        EOF

        echo "‚úÖ pubspec.yaml mis √† jour"

    - name: Get Flutter dependencies
      run: |
        echo "üì¶ Installation des d√©pendances Flutter..."
        flutter pub get --verbose

    - name: Analyze Flutter code
      run: |
        echo "üîç Analyse du code Flutter..."
        flutter analyze --no-fatal-infos || echo "‚ö†Ô∏è Warnings d√©tect√©s mais build continue"

    - name: Build debug APK
      run: |
        echo "üî® Build de l'APK debug..."
        flutter build apk --debug --verbose

    - name: Display success message and next steps
      run: |
        echo "üéâ BUILD R√âUSSI AVEC PLACEHOLDER HERE SDK!"
        echo "============================================="
        echo ""
        echo "‚úÖ L'application ALPR a √©t√© build√©e avec succ√®s"
        echo "‚úÖ Plugin HERE SDK placeholder install√©"
        echo "‚úÖ Structure de l'app de r√©f√©rence int√©gr√©e"
        echo ""
        echo "üìã PROCHAINES √âTAPES POUR INT√âGRER LE VRAI HERE SDK:"
        echo "---------------------------------------------------"
        echo "1. üîê Cr√©ez un compte HERE Platform: developer.here.com"
        echo "2. üì• T√©l√©chargez 'HERE SDK for Flutter (Navigate Edition)'"
        echo "3. üì¶ Dans le package t√©l√©charg√©, trouvez le fichier TAR"
        echo "4. üìÅ Extrayez le TAR et renommez le dossier en 'here_sdk'"
        echo "5. üîÑ Remplacez plugins/here_sdk/ par le vrai plugin"
        echo "6. üîë Configurez vos credentials HERE dans GitHub Secrets:"
        echo "   - HERE_API_KEY: votre Access Key ID"
        echo "   - HERE_APP_ID: votre Access Key Secret"
        echo "7. ‚ôªÔ∏è Relancez le build - il utilisera le vrai SDK!"
        echo ""
        echo "üìñ Documentation compl√®te: ${{ github.server_url }}/${{ github.repository }}"

    - name: Upload debug APK
      uses: actions/upload-artifact@v4
      with:
        name: alpr-navigation-debug-apk-with-here-placeholder
        path: build/app/outputs/flutter-apk/app-debug.apk
